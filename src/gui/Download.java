/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;


import database.DbHandler;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import models.Commit;
import models.Project;
import org.eclipse.jgit.api.errors.GitAPIException;
import repository.RepositoryHandler;

/**
 * Main window of the gui , used to download and browse projects
 * @see javax.swing.JFrame
 * @author mattia
 */
public class Download extends javax.swing.JFrame {
    /**
     * Creates new form Download
     */
    public Download() {
        //gui
        initComponents();
        logoB.setIcon(new ImageIcon(getClass().getResource("/images/sbac.png")));
        downloadB.setIcon(new ImageIcon(getClass().getResource("/images/download.png")));
        historyB.setIcon(new ImageIcon(getClass().getResource("/images/history.png")));
        setTitle("Sbac");
        setVisible(true);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        urlField = new javax.swing.JTextField();
        logoB = new javax.swing.JLabel();
        downloadB = new javax.swing.JLabel();
        historyB = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Repository URL");
        jLabel1.setToolTipText("");
        jLabel1.setVerifyInputWhenFocusTarget(false);

        urlField.setBackground(new java.awt.Color(0, 0, 0));
        urlField.setForeground(new java.awt.Color(255, 255, 255));

        downloadB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadBMouseClicked(evt);
            }
        });

        historyB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyBMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(downloadB)
                        .addGap(72, 72, 72)
                        .addComponent(historyB))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(94, 94, 94)
                            .addComponent(logoB))))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(122, 122, 122))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoB)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(historyB)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(downloadB, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(32, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void downloadBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBMouseClicked
        String url = urlField.getText().trim();
        if(url.isEmpty())
            new Dialog("insert a valid url please");
        else{
            try {
                Project p = DbHandler.urlExist(url);
                if (p != null) {
                    url = p.getPath();
                }
                dispose();

                WorkingAdv wa = new WorkingAdv();

                RepositoryHandler repo = new RepositoryHandler(url);
                ArrayList<Commit> commits = new ArrayList<>(repo.getCommits());
                Project project = new Project(repo.getRemoteURL(), repo.repoNameFromURI(), repo.getLocalPath().toString());
                DbHandler.insertProjectCommit(project, commits);

                wa.halt();

                setVisible(true);

            } catch (IOException ex) {
                System.err.println("git error");
                new Dialog("git error");
            } catch (GitAPIException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("insert a valid url please - Git Exception");
            } catch (SQLException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("db error while checking if url exist");
            }catch (RuntimeException ex) {
                System.err.println("url error");
                ex.printStackTrace();
                new Dialog("url error");
                setVisible(true);
            }

            
        }
    }//GEN-LAST:event_downloadBMouseClicked

    /**
     * Starts the procedure that allows the user to update a project already downloaded
     * on the PC, deleting everything related to the project itself and downloading it again.
     * @param url Git repository address.
     */
    public static void updater(String url) {
        System.out.println("updater");

        //Warning user...
        Adv dialogue = new Adv("It seems that this project has been already downloaded. Update the project?");
        if (!dialogue.getDecision()){
            return;
        }

        //Delete folders and project from DB  (RepositoryHandel.delete invokes DbHandles projectDeleter)
        RepositoryHandler.deleter(url);

        //New Download
        try {

            RepositoryHandler repo = new RepositoryHandler(url);
            ArrayList<Commit> commits = new ArrayList<>(repo.getCommits());
            Project project = new Project(repo.getRemoteURL(), repo.repoNameFromURI(), repo.getLocalPath().toString());
            DbHandler.insertProjectCommit(project, commits);

            System.out.println("New download completed.");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void historyBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBMouseClicked
        try {
            ArrayList<Project> projects = DbHandler.getProjects();
            if(projects!=null && !projects.isEmpty()){
                dispose();
                new ProjectPicker(projects);
            }
            else 
                new Dialog("no projects found");
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPicker.class.getName()).log(Level.SEVERE, null, ex);
            DbHandler.printSQLException(ex);
            System.err.println("error in getting project");
        }
    }//GEN-LAST:event_historyBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DbHandler.initDb();
                try{
                    new Download();
                }catch (Exception t) {
                    t.printStackTrace();
                    System.out.println(t.getClass().getSimpleName() + ": " + t.getMessage());
              }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel downloadB;
    private javax.swing.JLabel historyB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel logoB;
    private javax.swing.JTextField urlField;
    // End of variables declaration//GEN-END:variables
}
