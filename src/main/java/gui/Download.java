/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;


import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.table.*;
import database.DbHandler;
import exceptions.NoTokenException;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import models.Commit;
import models.Project;
import org.eclipse.jgit.api.errors.GitAPIException;
import repository.RepositoryHandler;

/**
 * Main window of the gui , used to download and browse projects
 * @see javax.swing.JFrame
 * @author mattia
 */
public class Download extends javax.swing.JFrame {
	
	private static boolean codeShovelPrintLines;

	public static boolean isCodeShovelPrintLines() {
		return codeShovelPrintLines;
	}

	private void button1MouseClicked(MouseEvent e) {
		String url = urlField.getText().trim();
        if(url.isEmpty())
            new Dialog("insert a valid url please");
        else{
            try {
                Project p = DbHandler.urlExist(url);
                if (p != null) {
                    url = p.getPath();
                }
                dispose();

                WorkingAdv wa = new WorkingAdv();

                RepositoryHandler repo = new RepositoryHandler(url);
                if(repo.isNoToken()) {
                	throw new NoTokenException();
                }
                ArrayList<Commit> commits = new ArrayList<>(repo.getCommits());
                Project project = new Project(repo.getRemoteURL(), repo.repoNameFromURI(), repo.getLocalPath().toString());
                DbHandler.insertProjectCommit(project, commits);

                wa.halt();

                setVisible(true);

            } catch (IOException ex) {
                System.err.println("git error");
                new Dialog("git error");
            } catch (GitAPIException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("insert a valid url please - Git Exception");
            } catch (SQLException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("db error while checking if url exist");
            }catch (RuntimeException ex) {
                System.err.println("url error");
                ex.printStackTrace();
                new Dialog("url error");
                setVisible(true);
            } catch (NoTokenException e1) {
				// TODO Auto-generated catch block
            	dispose();
            	new Download();
			}

            
        }
	}

	private void button2MouseClicked(MouseEvent e) {
		try {
            ArrayList<Project> projects = DbHandler.getProjects();
            if(projects!=null && !projects.isEmpty()){
                dispose();
                new ProjectPicker(projects);
            }
            else 
                new Dialog("no projects found");
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPicker.class.getName()).log(Level.SEVERE, null, ex);
            DbHandler.printSQLException(ex);
            System.err.println("error in getting project");
        }
	}
	
	/**
     * Creates new form Download
     */
    public Download() {
        //gui
        initComponents();
        //logoB.setIcon(new ImageIcon(getClass().getResource("/images/sbac.png")));
        //downloadB.setIcon(new ImageIcon(getClass().getResource("/images/download.png")));
        //historyB.setIcon(new ImageIcon(getClass().getResource("/images/history.png")));
        setTitle("Sbac");
        setVisible(true);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	// Generated using JFormDesigner Evaluation license - Giovanni
	private void initComponents() {
		jPanel1 = new JPanel();
		jLabel1 = new JLabel();
		urlField = new JTextField();
		logoB = new JLabel();
		downloadB = new JLabel();
		historyB = new JLabel();
		button1 = new JButton();
		button2 = new JButton();
		label1 = new JLabel();
		jScrollPane1 = new JScrollPane();
		jTable1 = new JTable();

		//======== this ========
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);
		var contentPane = getContentPane();

		//======== jPanel1 ========
		{
			jPanel1.setBackground(Color.white);
			jPanel1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder(
			new javax.swing.border.EmptyBorder(0,0,0,0), "JFor\u006dDesi\u0067ner \u0045valu\u0061tion"
			,javax.swing.border.TitledBorder.CENTER,javax.swing.border.TitledBorder.BOTTOM
			,new java.awt.Font("Dia\u006cog",java.awt.Font.BOLD,12)
			,java.awt.Color.red),jPanel1. getBorder()));jPanel1. addPropertyChangeListener(
			new java.beans.PropertyChangeListener(){@Override public void propertyChange(java.beans.PropertyChangeEvent e
			){if("bord\u0065r".equals(e.getPropertyName()))throw new RuntimeException()
			;}});

			//---- jLabel1 ----
			jLabel1.setBackground(Color.white);
			jLabel1.setFont(new Font(Font.DIALOG, Font.BOLD, 18));
			jLabel1.setText("Repository URL");
			jLabel1.setVerifyInputWhenFocusTarget(false);

			//---- urlField ----
			urlField.setBackground(Color.black);
			urlField.setForeground(Color.white);

			//---- button1 ----
			button1.setText("Download");
			button1.addMouseListener(new MouseAdapter() {
				@Override
				public void mouseClicked(MouseEvent e) {
					button1MouseClicked(e);
				}
			});

			//---- button2 ----
			button2.setText("History");
			button2.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 12));
			button2.addMouseListener(new MouseAdapter() {
				@Override
				public void mouseClicked(MouseEvent e) {
					button2MouseClicked(e);
				}
			});

			//---- label1 ----
			label1.setText("SBAC");
			label1.setHorizontalAlignment(SwingConstants.CENTER);
			label1.setFont(new Font("sansserif", Font.PLAIN, 50));

			GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
			jPanel1.setLayout(jPanel1Layout);
			jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup()
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup()
							.addGroup(jPanel1Layout.createSequentialGroup()
								.addGap(23, 23, 23)
								.addComponent(urlField, GroupLayout.PREFERRED_SIZE, 340, GroupLayout.PREFERRED_SIZE))
							.addGroup(jPanel1Layout.createParallelGroup()
								.addGroup(jPanel1Layout.createSequentialGroup()
									.addGap(94, 94, 94)
									.addComponent(logoB))
								.addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
									.addGap(0, 0, Short.MAX_VALUE)
									.addGroup(jPanel1Layout.createParallelGroup()
										.addComponent(label1)
										.addComponent(jLabel1))
									.addGap(99, 99, 99))))
						.addContainerGap(35, Short.MAX_VALUE))
					.addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addContainerGap(147, Short.MAX_VALUE)
						.addComponent(button1)
						.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(downloadB)
						.addGap(72, 72, 72)
						.addComponent(historyB)
						.addGap(15, 15, 15)
						.addComponent(button2)
						.addContainerGap())
			);
			jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup()
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(label1)
						.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
						.addComponent(logoB)
						.addGap(12, 12, 12)
						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(urlField, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel1Layout.createParallelGroup()
							.addGroup(jPanel1Layout.createSequentialGroup()
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(historyB)
								.addGap(32, 32, 32))
							.addGroup(jPanel1Layout.createSequentialGroup()
								.addGroup(jPanel1Layout.createParallelGroup()
									.addGroup(jPanel1Layout.createSequentialGroup()
										.addGap(18, 18, 18)
										.addComponent(downloadB, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE))
									.addGroup(jPanel1Layout.createSequentialGroup()
										.addGap(32, 32, 32)
										.addComponent(button1)))
								.addContainerGap(22, Short.MAX_VALUE))))
					.addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addContainerGap(229, Short.MAX_VALUE)
						.addComponent(button2)
						.addContainerGap())
			);
		}

		GroupLayout contentPaneLayout = new GroupLayout(contentPane);
		contentPane.setLayout(contentPaneLayout);
		contentPaneLayout.setHorizontalGroup(
			contentPaneLayout.createParallelGroup()
				.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		contentPaneLayout.setVerticalGroup(
			contentPaneLayout.createParallelGroup()
				.addComponent(jPanel1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		pack();
		setLocationRelativeTo(getOwner());

		//======== jScrollPane1 ========
		{

			//---- jTable1 ----
			jTable1.setModel(new DefaultTableModel(
				new Object[][] {
					{null, null, null, null},
					{null, null, null, null},
					{null, null, null, null},
					{null, null, null, null},
				},
				new String[] {
					"Title 1", "Title 2", "Title 3", "Title 4"
				}
			));
			jScrollPane1.setViewportView(jTable1);
		}
    }// </editor-fold>//GEN-END:initComponents

    private void downloadBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBMouseClicked
        String url = urlField.getText().trim();
        if(url.isEmpty())
            new Dialog("insert a valid url please");
        else{
            try {
                Project p = DbHandler.urlExist(url);
                if (p != null) {
                    url = p.getPath();
                }
                dispose();

                WorkingAdv wa = new WorkingAdv();

                RepositoryHandler repo = new RepositoryHandler(url);
                ArrayList<Commit> commits = new ArrayList<>(repo.getCommits());
                Project project = new Project(repo.getRemoteURL(), repo.repoNameFromURI(), repo.getLocalPath().toString());
                DbHandler.insertProjectCommit(project, commits);

                wa.halt();

                setVisible(true);

            } catch (IOException ex) {
                System.err.println("git error");
                new Dialog("git error");
            } catch (GitAPIException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("insert a valid url please - Git Exception");
            } catch (SQLException ex) {
                System.err.println("insert a valid url please - Git Exception");
                new Dialog("db error while checking if url exist");
            }catch (RuntimeException ex) {
                System.err.println("url error");
                ex.printStackTrace();
                new Dialog("url error");
                setVisible(true);
            }

            
        }
    }//GEN-LAST:event_downloadBMouseClicked

    /**
     * Starts the procedure that allows the user to update a project already downloaded
     * on the PC, deleting everything related to the project itself and downloading it again.
     * @param url Git repository address.
     */
    public static void updater(String url) {
        System.out.println("updater");

        //Warning user...
        Adv dialogue = new Adv("It seems that this project has been already downloaded. Update the project?");
        if (!dialogue.getDecision()){
            return;
        }

        //Delete folders and project from DB  (RepositoryHandler.delete invokes DbHandles projectDeleter)
        RepositoryHandler.deleter(url);

        //New Download
        try {

            RepositoryHandler repo = new RepositoryHandler(url);
            ArrayList<Commit> commits = new ArrayList<>(repo.getCommits());
            Project project = new Project(repo.getRemoteURL(), repo.repoNameFromURI(), repo.getLocalPath().toString());
            DbHandler.insertProjectCommit(project, commits);

            System.out.println("New download completed.");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void historyBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBMouseClicked
        try {
            ArrayList<Project> projects = DbHandler.getProjects();
            if(projects!=null && !projects.isEmpty()){
                dispose();
                new ProjectPicker(projects);
            }
            else 
                new Dialog("no projects found");
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPicker.class.getName()).log(Level.SEVERE, null, ex);
            DbHandler.printSQLException(ex);
            System.err.println("error in getting project");
        }
    }//GEN-LAST:event_historyBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	
    	codeShovelPrintLines = Boolean.parseBoolean(args[0]);
    	
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DbHandler.initDb();
                try{
                    new Download();
                }catch (Exception t) {
                    t.printStackTrace();
                    System.out.println(t.getClass().getSimpleName() + ": " + t.getMessage());
              }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
	// Generated using JFormDesigner Evaluation license - Giovanni
	private JPanel jPanel1;
	private JLabel jLabel1;
	private JTextField urlField;
	private JLabel logoB;
	private JLabel downloadB;
	private JLabel historyB;
	private JButton button1;
	private JButton button2;
	private JLabel label1;
	private JScrollPane jScrollPane1;
	private JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
